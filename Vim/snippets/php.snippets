snippet php
	<?php
	${1}
	?>
snippet ec
	echo "${1:string}"${2};
snippet inc
	include '${1:file}';${2}
snippet inc1
	include_once '${1:file}';${2}
snippet req
	require '${1:file}';${2}
snippet req1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet $_ COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_ FILES['...']
	$_FILES['${1:variable}']${2}
snippet $_ Get['...']
	$_GET['${1:variable}']${2}
snippet $_ POST['...']
	$_POST['${1:variable}']${2}
snippet $_ REQUEST['...']
	$_REQUEST['${1:variable}']${2}
snippet $_ SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_ SESSION['...']
	$_SESSION['${1:variable}']${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
snippet class
	/**
	 * ${1}
	 **/
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
snippet fun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}

########################################
# Custom Snippets
########################################

# GENERIC
####################################### 

snippet this
	$this->${1}
snippet ph
	<?php ${1}

# HTML
########################################
# HTML
########################################
snippet css
	<link rel="stylesheet" type="text/css" href="${1}.css" />
snippet cssd
	<style type="text/css">
	${1}
	</style>
snippet js
	<script type="text/javascript" src="${1}.js"></script>
snippet jsd
	<script type="text/javascript">
		${1}
	</script>
snippet p
	<p>${1}</p>
snippet h1
	<h1>${1}</h1>
snippet h2
	<h2>${1}</h2>
snippet h3
	<h3>${1}</h3>
snippet br
	<br />
snippet li
	<li>${1}</li>
snippet a
	<a href="${1}" title="">${2}</a>
snippet div
	<div class="${1}">
		${2}
	</div>
snippet ul
	<ul>
		<li>${1}</li>
	</ul>
snippet lia
	<li><a href="${1}" title="">${2}</a></li>
snippet table 
	<table>
		${1}
	</table>
snippet th
	<th>${1}<th>		
snippet td
	<td>${1}</td>
snippet tr
	<tr>
		${1}
	</tr>
snippet trtd	
	<tr>
		<td>${1}</td>
	</tr>
snippet trtd2	
	<tr>
		<td>${1}</td>
		<td>${2}</td>
	</tr>
snippet i
	id="${1}"
snippet c
	class="${1}"
snippet s
	style="${1}"
snippet clear
	<div style="clear:both;"></div>
snippet label
	<label>${1}:</label>    
snippet frow
	<p>
	<label>${1}:</label>
	${2}
	</p>    
snippet ftext
	<input type="text" name="${1}" />
snippet textarea 
	<textarea name="${1}" rows="${2}" cols="${3}">
	</textarea>
snippet fcolor
	<input type="color" name="${1}"/>
snippet fdate
	<input type="date" name="${1}"/>
snippet fdatetime
	<input type="datetime" name="${1}"/>
snippet fdatetimelocal
	<input type="datetime-local" name="${1}"/>
snippet femail
	<input type="email" name="${1}"/>
snippet fmonth
	<input type="month" name="${1}"/>
snippet fnumber
	<input type="number" name="${1}"/>
snippet frange
	<input type="range" name="${1}" min="${2}" max="${3}" />
snippet fsearch
	<input type="search" name="${1}"/>
snippet ftel
	<input type="tel" name="${1}"/>
snippet ftime
	<input type="time" name="${1}"/>
snippet furl
	<input type="url" name="${1}"/>
snippet fweek
	<input type="week" name="${1}"/>
snippet fradio
	<input type="radio" name="${1}" />
snippet fcradio
	<input type="radio" name="${1}" checked />
snippet fcheckbox
	<input type="checkbox" name="${1}" />
snippet fccheckbox
	<input type="checkbox" name="${1}" checked />
snippet fselect
	<select name="${1}" >
		${3}
	</select>
snippet option
	<option value="${1}">${2}</option>
snippet fsubmit
	<input type="submit" value="${1:Registrar}" class="${2}">

# CodeIgnited
########################################
snippet civ
	<?=$${1};?>
snippet cif
	<?=${1};?>
# value="<?=get_value('var')?>"
snippet cifv
	value="<?=get_value('${1}');?>"
snippet ciif
	<? if (${1}): ?>
		${2}
	<? endif; ?>
snippet cifor
	<? foreach($${1} as $${2}): ?>
		${3}
	<? endforeach; ?>
snippet cic
	class ${1} extends CI_Controller {
		${2}
	}
snippet cim
	class ${1}_model extends CI_Model {
		${2}
	}
snippet cilm
	$this->load->model('${1}');
snippet cill
	$this->load->library('${1}');
snippet cilh
	$this->load->helper('${1}');
snippet cilv
	$this->load->view('${1}');
snippet cicon
	function __construct()
	{
		super::__construct();
		${1}
	}

snippet cifun
	public function ${1}(${2})
	{
		${3}
	}

snippet ci_post
	$this->input->post('${1}');
snippet cifp
	$this->input->post('${1}');     
snippet ci_query
	$this->db->query("${1}");
snippet ci_insert
	$this->db->insert(${1}, $${2});
snippet ci_update
	$this->db->where(${1},${2});
	$this->db->update(${3}, ${4});
snippet ci_row	
	$query->row_array();
snippet	ci_result
	$query->result_array();
